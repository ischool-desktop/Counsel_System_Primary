<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonX1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAAK/INwWK6QAAAAZiS0dEAAAA
        AAAA+UO7fwAAAAl2cEFnAAAAQAAAAEAA6vP4YAAAACJ6VFh0U29mdHdhcmUAAHjac0zJT0pV8MxNTE8N
        Sk1MqQQAL5wF1K4MqU0AAB6vSURBVHhezVsHWFTX1sUoikjvCNL7DNOo9l5i77GjRonGHntFRRGxgqhU
        C6ARULEbo4KKDRVQBAt2RY3YS1AMuv6978wYNBpIXvLeP3ybmbn33HP2Wrucfc69o6Hx33tVoaE+la/o
        GMvnzv33NPuXRlKDUoOsSuNUI9FUSXV6Ly/q49yG235Kzr+k5j/bLYNmxRkAg9MiqakSbXrXqVZd07Cm
        uY6Ztr1+7Zr2eoIIn+kYn+M2JNxWfR33wX2pSeEx/t+91MDZejVUAPSqaWua69Yz9TAZaN/KYoJrYO3Z
        4vl1QqTr7MLkO+0XKzJIDqskw5aO0bm13MZ8glugyUCHVnwt90H96an65L55DHXY/M+JUANn92VL6VSr
        qWmq19JSYTbWZZh1sCTBfqnXOZdI/yeiqPpl8rgm8F/fGo2TOqDZxk5o/mMXQfgzH/Nf1xqyuKYQRTUo
        c6Zr7JZ4neM+zMa4DuM+q1LfKg/hsXjM/xkRnwLXrV5b28oowK6t5WxRlO1SxWW31fXe+qxtQQA7o+vW
        /hi4ezhGHZiAGZnBWHQqHBHZqxGZGy0If+ZjfG7kgYkI2P09XTNAIMd7TUu4rqr31maJ4rJFkDjKaIB9
        W00ai8Drqkj/rxPBrLMbshV0q+lXtzQcYNfeMthzk3249yNxTEM0TGqH7mkBGHtwCpaeXoHUy2nILDqO
        C48v4u7Le3jy+ilelL7Eq7evBOHPfIzPXXh0SWjL1yw5HYkx1Ec36qthYnuIYxrBbrn3I4u5npsM+9u3
        r6ZX3bIcEerQ+NfCorzVa9EoRjrNzX3MZrivtFnmVSwi4E02dESfnUMw8+g8pFzaivMPC/D49ROUlpXi
        Pf2pX/z50z98cp6v4Wu5j2Tqa+bR+eizYyga0xge0Y1QZ6lXsel0j1U6LSx8WRcS1ulf8wYGz1mYk5Be
        VV1Na8OhDgNrh0pynVb6vee47r4tQHDhHVf34Obz2yj5rQS/vfvt8/KejpOUvS/7IPxdkM9cw31xn9z3
        9Mx5gkf4rW8Dx5X+7y1DpbmsC+ukSpasI+v6j80WavDs8gbVnXRcjSe6LbReqnjCVm9GMf7dvrFIKPgR
        V55excu3LwXwanld9hospe/eELi3ePuuFL/+9iuevX2Bh2+ekDzG09JnePXbK/KU39u8UV1Xvi/um8dY
        T2MF7huHppQj3KMbwmqJ4onRBLeFmk66rqyjKjz/ERLU4HlONqwhN5CZzHBPsgn3KpXFN0O7zb0w9cgc
        ZNzJxIOSYjwrfY7nann7nMh4QWBfEchHOPMoH+uv7cKM3NUYfHw+eh6ZgW6HpqH7YaUMODYXE7IjsPry
        Zhx5kI17v/5CpLwUCH1Ofan75TF4LB5z6pG5aLu5N6RxzVBnuXep8QyPJNaRdSVhnf8jEj4Cr+Vv7G0S
        5LHdJsLrnXxNM3RO64fQU8uQW3wOv/z6AMWk1MPXDwV59OYhnpQ+QsHTy1h1OZnABRHIKRhzeikiL23G
        zqKjOFach9wnhch7chUnKc733TuJ+Cs7MDVnFXplTieCpmJ+XhxOFudQf8V4TCSq++exeEweOzRrOTrR
        LCOLbw7rCO93xkGi7azrf0pCebc3qi7WlxrP8thaJ8LrvTS+KTps6Y1FpyNw7mE+br+8jTsv76DolVLu
        l9xF/tMLWFQQj28yJ2N67kpk/HKGADz7KBF+yIif+fCSQij78SUsLkhE78ypmJyzFMeLT5NX3KUxinCH
        xrlNY/LYrEMY6dJ+Sx9ISDfrcO/3RjNFWzVJZ1Vy5ND9y57AUx0nE8Nq5lquRlPc1lgtV5SJ4xqjdWoP
        BJ8Iw+lfslH4tBCFz67gCsm1F1dw9UUhkm9ux8Dj0xByPh6FL27h3fvfs/+fgf7SuV9eP0bclTTyoqkI
        v7gWF59doLGuCmPy2JdJh1Oky9wTi9AqpQdEsY1hucyrzGCy+5qqpLvKExgLY6rUixty7a1PYqs/0mm2
        xRL5a9fo+miyqRMmHJ6JQ3eO4OzDPJx7lIfzj/OQ/+Q8ch9nIzR/JUafnoczjwv+Y+CfEnLr1T3MyVuJ
        8WfmIfPBURTQmHk0NuvAumSQTuNJt8Y/doJLVAOYL5a/1hvhPJsxqLAwpgpJULs+z6kWtbpaf2O6UHLP
        fqUf/BJbY8De4dhyZTtO3D+Jk79kIetBFk4/PIWjDzIxLXcBllyIp9h//ncMXalrSmkWSbm1F6NOzcLe
        op9whsbOKs4SdDlOOm0m3frtGQ4fmpZtSWfjUOl97S7WvRgLCWOqMBTUrm9czUlHYTjLI8MqXAFxPLn+
        5u5Ykh2JA3fSkX43A4fuHcKR+xk4eG8/Zfb5SLi2haa6t5UC8p82OkzEjz8zG9tvbycdDiPj7iGkF2Vg
        /+10LD4TiZYUph607rAM94LBLFFGNUcdLwJvopoev+gFbH0uJ7nGrqM7zHGW2RLZW8fV/vBLao3A/WOR
        SrG46+Ye7Lm9Bz/dISnajeC8UCRd3yIUNP/N1zFKilNy5mDbrTTsJV1239qDnaRbSmEahv48Fj6JbWC/
        qi5MFsvf6gQ6BpULBa4WP1skMTOcMU2qKwwbGAaL860ivCAi67dI7YqwM8uRcnUzUq9txpYbm2ngLVh+
        YTmiCtfgDRU3/4vX3rsHMefcfEGfzWSEFPLC5CtbEHomHM1Su5EXUEIM94bBXM8CTalBY8LGS2uuD/7g
        BR9ZX2e4Y7DJEmmZ3WpfKBKao8+eIYjOj8f6y4lIvJKIjdcSEVcYjYX5i/G49Mnfwl5GZW/puxIi71cq
        gT9eK1S2Qy6d11xdj2UFS7HhahISChOx7lIios6vQa/dQyFb3wI2qygXLJaX1Qp0DCHg9qqE+AcvYAI4
        SxpR7PsYzBZlW4TL4RxTF34bW2MsFTGrzscg6kIMYi9GI57AB+fNRc6Ts5XVVWjHgO+9puLnRTpOPNmC
        I4824PCjJBx7nIKcZ/tws+Q8XpVVvl7gPh+8LsaC8wuw+tJKRF+MweqCGKwkXUcfmgqfDa3hGF0PpssV
        0AsS51S116lLGM0+lwvYJXgbylK7l02gUZikxGqFF9zXNEDj1A6YcTIYS8+FY/n55VhBbr8ofwGVtesq
        Hfds7Vsl+ch4mIDt9xcj7X4oyQJso3e1bOVj98Lw04MYXHhxjNYPrypNbvr9dASfm4OIgggsywvHkrMR
        mH5iHhomd4RrXENYRlAYLJSWaHW3+Z7zGwlvu32YEdj67BI87zvqTnBNNFkqI9fxgWhdQ7TZ1h2zsoIx
        P2cBFpxdgDBiO/jcLCpyCiulILv46ae7kXJ3HjYVzULKvSCkkmwuJ/ydjyffnY0fi4KwsWgODhYn4Onb
        B5Uag9cKSwrCEEL5IIR0nJcdipkn56FVWg+4r20E65W+MFoih8441w2E0Y09XYVZSIbqwsekmpNuXf05
        4nzT5TLYRvlCnNAQnXb1wdSTQZh5Ogizc4IQlDudavYoWtVVPOWxyx95lIx1tycj4c4kJJFsvDsRP5Js
        Ikm+p3zn73yczyfemYz11H7NrUnYcT+y0iTsu0dL5ZwpCMoOwnTSdcqJIHTY2Rce6xrBZrUfTJbJoRsk
        LqjqoNPw0zBgAjgzWmi1sextsEDyzJzi3z6GCEhsgK57+uGH41Mw8eRkTDlNkv0DThQfqdAyvOFx5ulP
        iLk5FrE3RyP+9mgiYhTWF41EIknS3ZHYcHcEklTfE+h93Z2RWEPt4m6NpuvGYNX1Udj9SywlypIKx7vz
        6y3Myp2GSacmYwLpOu7YFHTe3R8eZESbaD+YUj2jFyJ9VqOVRT/CyltqHPLCbMCxwDFRR3ugwwzDMOk7
        8wgiINYXosT66LKnL0ZkjsXo42MwLms0Zp6dhHslRRUqdP/1dcTdnIAV14di1Y1ARN0cithbQ4iIb7H2
        zrdExGAkkPD7uqJvEU/H+Hw0tVt9Yygirwci4tp3CL82HGefHa5wPN5vCL+4GKNOjsLI42MxPHMcOu3u
        C/eEBrCNURKgv1D2rmZ/+1mE1Y6Ed5q57hH+CfFfa5RLjOFiKcwj5bCL9YF7Yl20390TQw4Px3dHh2HY
        iUAqd0MoQVVskQPFSVh0pT+WXQtA+PUBiLzRH6tu9kP0rb6Ivd2XAPfB2qI+WEPvcfSdj/N5bhdB7fm6
        JVcDsLBwABJuB6OkEklx803aKDkeiKGZwzH40Pdou6snXBPqwoa82SyCCFgkg/ZIl1jC6kJioMoDyumP
        aiMPnYluOwyXKAmwjfWGa6IfWu/sgv7pgzHwyCAMOjoAa69GV7isffnbU0TfmID5hT2x8EovLL7akwD1
        JCJ6YMWN7gS0O6JudUP07W6IIll1sxsB7y6c53bcPuzKN1hQ2AvzL/dG6OVBuP5rfoVekPngEAYfG4QB
        hwej78Fv0XJHFziv90edGB+YrlDAYLEMtSa47SC8YhJjEsYuLHuNq2hXk+lO88g0ohmACbCJ84Jzgg+a
        bGuLngf6oXdGX/Q90gtbbyVXqMjtkksIudwPcy51wbzLXRBS2BkLr3bComudsPR6Ryy/0QHhJBE3Seid
        v/PxxXQ+jNotKOyEoIvtMb2gHabmt8ek8+1x+GFahePmPc1F/8xe6JHeHd3290TDtLZwWOcL6xhvJQE0
        E9Sa6nFEo2ZVOWHmtQFjF/6ZVtHT9NaZITplqCKgTqwXHBO84b+lOTr/3APdD/ZAz0PdsKtoe4WK5L84
        jukXOmHGhfYIutQOcy63JSK+RsiVrxF6tQ2BbE1ktCbASuHvfJzPzyv8GnMvE/i8rhif01GQsdntsKNo
        bYXjXnt5gbbVemHkqY74/kQP1E9rBdt13rAqT8B0UVYVXU3eMeKbLL8T8JVxDR+dmaIzhkulMIuUwTpW
        Afv1CkhT6uPrvZ3QcX9ndEnviJ13KiYg52kGJp5vg8n5rTC1oCUR0RKzLrbA7EvNCVxzAtlMkPlXlMKf
        gwubk8c0p3YsbcjiKbRZ+oiW18WC/Fr2skICuOB6VvqQ9hAf0QoxHX6bW8JmrRcso71gQh6gzx4wjQjQ
        +QwBzIoOsWNAOcB0hQy1YygPrJPDdaM3muxsgzb72qHtga+RWokQuPA8Cz/ktcK4vKaYkN8EkwqaYMqF
        xphGMuNiI8y81AizLv8u/H0GyfSLjTGV2kzMb4TFVwah+M2dCkF/rsEz2mUefWwyHJO8UGetAhbRChjT
        zKZHOUB7mvgLBGhVVehM8ThssEQGkwgZXSSji+VwSJLDN60xmu9pjeb7miO6cHWFSt1/fQNTznfEiLMN
        MTqvIcaeb4Af8usTGfWJjHqYfKEeEfK78PdJJBML6mM8tRlH7Ufl1ceG26HCNvpfeXH9sZYWbd5bm8A2
        QQ6reDnMVsthFC5TEjBFdFiDsP4hBOiAVPsHt+361MgonGaC1RQG8TLYJcggTvFFw13N0WhvEwSdnSnc
        wPiz11uak1dcGY0h2b4YlluXiKiLUef8iQw/IsOPAPpiXL4vkaJ8H0fH+PgYOs/tRpz1p+v8MfJsU2Q9
        /vmv4EfOo7Not68r3Db5os56GSxj5TBdJYchVbe6NA3WHOe2nbF+SgBPCaKaw5xi9agRNzZdRWEQR2uC
        9VI4bZTBZ1sD1N/dCAOPBlBMPq5QqaxHOxGY7YNviYTAHB8C5I3hZ70JnDdGnvP6g4w46yWc53bcfkiO
        Lwae8caMgj54UMlQEFz/xHjIttSD/QY5rNeSJ1Mom6yUw2CZDDoL5dD6zpnrAJFqGhSSoLIO0NBwrdHT
        Jkg3VFpmSI1NKBFaxEipEynskqQQpXrDb0d9tPy5JXIe51RIQEnZC0Re+Q4DTnsSEC8MzlYQKAWGkgTm
        yv8gQ3Pkwvlvqd0gah9w2gv9T3ujd5YXYq+HVLj2YNdfU7gevtsbwS3ZBzaJZMA1MphRKBtRTtOj2a1W
        iKysRndb3h3i3WLGLNQB6krQSbOeSYBOsOSJPuUBY7rILEpKnUhhkyCF449SyNJ84bPTj3aBoiokgBvc
        oeIl6Hxr9DslQr/TMgw4I0PAGSkGZitlkEr4Mx/n8/2pXb/TcvQ5JUevLAV6nJSjb1Z9ZD7c96dj5jzO
        RStK1OItPrAnj7Umz7UgDzahUDaktY3uYjm050qfVKtrGkCYnUi4+hVKYfVawPYrM61WNE3kcbIwpKRh
        ShdbxEkplsgLNkrhmiKDdJs3+mb2o7s1jypFwtUXJxBMU2H/U87ofcqTRELgPNGXPOOD0Hc+xud6ZUnQ
        86SEgEvR7YQUXY7L0OGYBCNzetJmyu3Pjvm09CmGnxgFcZo3nJKpiCOPrU3ubxZDhlwpg8FyWgovkqPm
        VHFeFcJImHmrXL0nIKyIeDVYm8RHa5jzBt0wuojCgC82p04EL6BOHTZJ4L5FDm/ygq23tlaKAG50v+QC
        1tHiZnSOG/plORFId/TMEqvEk949CbAnupN0O+GJrick6Hxcgo4EvP1RKdpmytD6iBThhfP+EArs+rGF
        8ZBt94VrKq1hyFDWlLgtKIGbRrH70/S3lOb/UDlqBLrwfoCPCuuHvcEP+wF0QqzZqvaEWvOkJRwGRjQd
        Kr1A6VLcuVOyBG5bpOh9pB9tR1Vuw4JJKH33CvnPdiPpxneYm++PcbkuGJ7tiG9OupOVxQRYjE4kHY+J
        yeKeaHfUk4BL0IakFYFvfpiJqIdDxfs/Ip5dv+lPreC6WUYGYkORwdaR4WLJgJT9DdTuHywr0WxlNYEx
        knAZ/OFGSfkdIacqVrU6ak0VF/KU8bEX0IyQKIU95QLnVAk80mSIuBhJd4DeVdoTuGEZbYA+Kb2Jay8z
        6f5fMrn21wTMnSwtItAi+izG1yStj4jR8rAnWhzyRLNDEjTJkKL+QUqoJ7/BXdVynHeChp0cCZctEjgm
        S2G7gQ2ltL4JWd9Qbf0wyv5TPAsZW7n4/2hjVL0nyPtldTUHu26ptYBch7zAkLyAE4kFMWq1jgYRQoFI
        2CyB/+6GSKebI3/3xcvqiXkBaHnEDa0zRWRpEX0Wo8VhMZofEqMpgW+c4YlG6RICL0Hd/VL47JNgYcEC
        IRTiaEveI00OxxTyTjJMHcr8lpz5aepj6+uT9XU4+YXIoTnIdQtjI2GMHzZDOAnyi72A50TeMZVUaWw9
        XWum7A3nAn3KBUY0JfJ0YknMcijYbqBZgRh3ShVTedyJ7gYX/C0OmIBxZwPQ5JAbubiYLM2gxfRdjEYE
        vGG6JxqQ1esdkMBvv4TASyHfS2Tsq4+lBeFovLcVHFI9ySupamXXp8RnToWPMVV+Blz6cuzT3F9jpvwN
        Y2JsKoyM9aObI+ow4AcLXDUsdLpWHSEpZOZ4RuAsakzFBGdVZpiTDOcDNQk9Mnrj0rPLf5kEJmB0bgAa
        pLuTpQl0uphAi+m7GPUIeN0DnvD7mYFL4PUTTcN7pJDslMJjuxTuZHmnVApJ8kYBPMc9T3tRVPXRcl5P
        nfnny8FYGJOATfnwxGfvC3yYDqlBPY3OLonVpysZVIYCVVRUHZYnwZbmWwfyBEeyQueDPXH6UfZfIqGE
        CBiRHQD/A+7k4gT6gJhAi+G/3xO+P3sScE8oyOLyPRJIdkkg3kGz0DYpXLbymErwQtKjuDenmt80mmp+
        MpQ+g2fXpzDWnKZAFcIiYPp4+vvD7TH1rTEhDDTcTQK/+l5WrDWHOqMkwu4kkED5wIzygdoTBBJIEYcU
        ildyyWS6TVVCz/dU5sUEDDsTAK+f3ZWASbwZ9E+e5OqeZHECvpuA76Sku51mnzTOPQReiHmV26vBU9wb
        qeJel5e9PO3NVoAxMJZy7s+3/z57g/Sj+wMUIY01urqmVh2vQM15KhJoa5kzK8eY2hOsKBzYCjw72Cd7
        QrTVB+NoZzaP7t9XdMOUCRiSNRDSPR4CYI5v2R5PAu0JT7K4qBxwtroTgXdIpi17rvS41GW3V1u+PHiu
        +YPJ9Un3KoRBwEJ7niRc/X3x5ignww9b5PRZpuFkOFhjiPR2tUkKaFMscTWlV44EU2KdpxwrUoTjkBVj
        t7Qnb6i7qxlm54bQw1E55BGf30Tl4wOPD4LHTpEAmC0tIjdna7tvU1rchWoOAThVoYLVaapj0i250osj
        j1S7Pc/3ZHltBk8GY52rkO4CBsaifEbgszdG1TOBejZghgxUjDXSaGG3QuN7RWm1KUQCJUV1OHCWZZfj
        uDMnRVghK3JHNRF2VDXakUcotjegDdXvEHUpnp7zyUIRPefDT36VvSsTHo3rlzkQLmkiIbbdSFzJ0mxt
        wdVTOccQ8E3kZWqrs8uvIQ/kbE8JT4h5FXjOVwL4yQSedBZ019BopMLCmP7U+moiynuBVEOnemeNb9zT
        NUZ6gUmoyZ5AOUGXcgJXWawAZ16lN6iIIAupibCl0LD5kaYqqiDFW/3ReE9bdE/vj6FHR2EELV39djYh
        C0tIZErAZGk1aFuVxa0T5ZToqH/aoGGyeSwjCsMP2X4JGUcAr1CCJ12rsM6su3LtXynrqwkonwv4dnJd
        elIoUGOg52WBBHItzgnMtg65HE83Ql4gb2Ai2DIcl5akLCvNscpk2JDrshVtNkpQZ6MniRh1iBhbChm2
        MLs3A+Z27OYM2op2dNTAzTjWucBh4Gx1nucpHGstJvChCop5As9uz+BZV9ZZWfh88ZZ4edf/9POHhyXo
        BN9MbKLhaTZF41vpXSah6ngv1JjDA5MClBfYG9gNmQgOC8EjiAiOUXZXtlxt2l/kEOH4ZXCC0HabICqw
        fI4BW1Jbwdq8ncVxzsB5fueNDS5veZojq9cKI2MsUAi6sE4CeNaRdWWdlbpX+GjM54go/7AUP5HNFVQr
        DS+LYI0hsl80RnjhqzFeqD6TFKC8wO7H866aCFaSiWBrcZJiyzEhDEgQJuUT4WNqwNxWCVoh9CNYXA18
        KQFfROOS1WvOJyME0XQ3Xo6vGDzrxjqyrkqdWfdKPRz1JRI4aQjPDJHwRmJbDbn5PI3B0iImQXMMbzPT
        TgtNOTVDOA4VRISCiKAbkWQldlMmgwEwEI5bBmVMu7QmgigJ4s98TADMLs6rOKrmBGtzgltG/bLFVcC1
        aCwdGtMoSAqDyVJojZOT5SVFgm6so1JX1pl1r1Ti+1I4lH9m0I4a8aPp7TTcjKdp9Bdf0Bwtf687kcrP
        GRKYzJVAdz5tOpJybB12T1ZaIINiVY+e0mBC2JIMjEU/ko6RMFg+rk9793p8F5faCqDZ2hzjKlfnvvVD
        KExCKHcEi1B7lhiGkyXvtQZ7XKjCOrFuSh1ZV57zK/Vs4JfA8/Hyj8lzDc0Jhe+qtKGnCEdU6+68X/cH
        yWuzGaTQXBGcFnjALkwEerYQOhQarLAWuyoB0CbrMRgmhYHpMEC18Hc+zlZWAyZv0qL4FqxNJa3FIglc
        l3lAuswV4jA3OM73gOV00Wu9vo77v6pda4Sgk1I31pF1/ccemy9PggF1bEMiI2mhUaNqH63GlitMRrtd
        t50jeue20B2KZS7wj3SG7yoXiCPd6BceYpgukkIvlPbkVYBqLKAk+qmEeAlgtUm4rflimhojRPCKdkGT
        eEe0iHdAoyhH+ES4QBTm9s52kvN1/RbmK6qQDoIuSp1YN9bxHwOv9g41CexSfF+dHzDgnRUuMjppWtUc
        ZfaNdYrzTOe78qUu7+qtckaLOAd0SLBDt0026JFig64ptmi/yQ4tNzqgSZIj/QTGCY2SnNB0oyP9aMoR
        rTY5oH2qHbpvtUHf7dYYuMMKAdus0HtzHXTeYIvWa+3RcLXjO9l8h7s2/WunaFnXHMVjq3RgXVgn1k39
        E7vPPguoBvR33zkncFLhzMqLJmcS3mNrSdJd20F7nF0/y41ewXaFTaMc3rRPtEPPZBsCYo1hey0x7qA5
        ph01xdxTxgjLNaQHrvQQe1WHfiOgi2XnDRCSbYhZx00wIcMMI/ZZYDCRwAR0WG/7ptEim0K3weYbdZ1r
        juOxVGPy2KwD61L+JzN/F1+lrmMSeDtZ+BEFCf9UxYPEX6VUVy1TzUDbNgZhfhPN97SNrF3Y+8faz4fu
        siwbc8AcU1UELDpnSL8d0EPcdSKgUEnA/GwjzDhmgh8OmJUN3Wb+vEeceWGTGaZ7nNvrhWmbaXJhw2t6
        JpvH4jF5bNaBdfnXfzRVnp3yIcHby3xniacddxLOwk1J2lEK7aFtXHWobd2a030CdCPbztRP7bvCIH14
        kv6Zidv08mft1SmYd0C7YPZPtfLHp+qeGRKjl951rm5qg291Ih0baE2vZVJ1KPch9KXsk/vmMXgsHpPH
        /lddviKXYG9Q/5iKleG7LRyLfOOBCxG2FCvemqQDSTeSXlU1q/SvoV1lkFYtpfDnapoa/fmcqg235Wv4
        Wu6D++I+uW8eg8dSJ7ovPvxckfL/1Hn2BjURbA3ecOQ5mB9AYBfldTi7q4yEY5Z3ZvhRNU6gvE5n4c98
        jM9xG27L1/C13Af3xX1y3/9vf0fMRKhDgxMlW4gTEyvO7soPKrMF+a6MgwocW5WFgfIxPsdtuC1fw9dy
        H9wX96l+uvMfy/D/B+cVAUURWraaAAAAAElFTkSuQmCC
</value>
  </data>
</root>